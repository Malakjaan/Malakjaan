<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple To-Do List</title>
</head>
<body>

<h1>To-Do List</h1>

<form id="taskForm">
    <label for="taskInput">Add Task:</label>
    <input type="text" id="taskInput" required>
    <button type="button" onclick="addTask()">Add</button>
</form>

<ul id="taskList"></ul>

<script>
    // Array to store tasks
    let tasks = [];

    // Function to add a task
    function addTask() {
        const taskInput = document.getElementById('taskInput');

        // Get the task from the input field
        const taskText = taskInput.value;

        // Check if the task is not empty
        if (taskText.trim() !== '') {
            // Add the task to the array
            tasks.push(taskText);

            // Update the task list
            renderTasks();

            // Clear the input field
            taskInput.value = '';
        }
    }

    // Function to render tasks
    function renderTasks() {
        const taskList = document.getElementById('taskList');

        // Clear the existing list
        taskList.innerHTML = '';

        // Add tasks to the list
        tasks.forEach((task, index) => {
            const listItem = document.createElement('li');
            listItem.textContent = task;

            // Add Edit and Delete buttons for each task
            const editButton = document.createElement('button');
            editButton.textContent = 'Edit';
            editButton.onclick = () => editTask(index);

            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.onclick = () => deleteTask(index);

            listItem.appendChild(editButton);
            listItem.appendChild(deleteButton);

            taskList.appendChild(listItem);
        });
    }

    // Function to edit a task
    function editTask(index) {
        const updatedTask = prompt('Edit task:', tasks[index]);
        if (updatedTask !== null) {
            tasks[index] = updatedTask;
            renderTasks();
        }
    }

    // Function to delete a task
    function deleteTask(index) {
        tasks.splice(index, 1);
        renderTasks();
    }

    // Initial render
    renderTasks();
</script>

</body>
</html>                                                                                                                                       <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple To-Do List</title>
</head>
<body>

<h1>To-Do List</h1>

<form id="taskForm">
    <label for="taskInput">Add Task:</label>
    <input type="text" id="taskInput" required>
    <button type="button" onclick="addTask()">Add</button>
</form>

<ul id="taskList"></ul>

<script>
    // Array to store tasks
    let tasks = [];

    // Function to add a task
    function addTask() {
        const taskInput = document.getElementById('taskInput');

        // Get the task from the input field
        const taskText = taskInput.value;

        // Check if the task is not empty
        if (taskText.trim() !== '') {
            // Add the task to the array
            tasks.push(taskText);

            // Update the task list
            renderTasks();

            // Clear the input field
            taskInput.value = '';
        }
    }

    // Function to render tasks
    function renderTasks() {
        const taskList = document.getElementById('taskList');

        // Clear the existing list
        taskList.innerHTML = '';

        // Add tasks to the list
        tasks.forEach((task, index) => {
            const listItem = document.createElement('li');
            listItem.textContent = task;

            // Add Edit and Delete buttons for each task
            const editButton = document.createElement('button');
            editButton.textContent = 'Edit';
            editButton.onclick = () => editTask(index);

            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.onclick = () => deleteTask(index);

            listItem.appendChild(editButton);
            listItem.appendChild(deleteButton);

            taskList.appendChild(listItem);
        });
    }

    // Function to edit a task
    function editTask(index) {
        const updatedTask = prompt('Edit task:', tasks[index]);
        if (updatedTask !== null) {
            tasks[index] = updatedTask;
            renderTasks();
        }
    }

    // Function to delete a task
    function deleteTask(index) {
        tasks.splice(index, 1);
        renderTasks();
    }

    // Initial render
    renderTasks();
</script>

</body>
</html>                                                                                                                       <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple To-Do List</title>
</head>
<body>

<h1>To-Do List</h1>

<form id="taskForm">
    <label for="taskInput">Add Task:</label>
    <input type="text" id="taskInput" required>
    <button type="button" onclick="addTask()">Add</button>
</form>

<ul id="taskList"></ul>

<script>
    // Array to store tasks
    let tasks = [];

    // Function to add a task
    function addTask() {
        const taskInput = document.getElementById('taskInput');

        // Get the task from the input field
        const taskText = taskInput.value;

        // Check if the task is not empty
        if (taskText.trim() !== '') {
            // Add the task to the array
            tasks.push(taskText);

            // Update the task list
            renderTasks();

            // Clear the input field
            taskInput.value = '';
        }
    }

    // Function to render tasks
    function renderTasks() {
        const taskList = document.getElementById('taskList');

        // Clear the existing list
        taskList.innerHTML = '';

        // Add tasks to the list
        tasks.forEach((task, index) => {
            const listItem = document.createElement('li');
            listItem.textContent = task;

            // Add a delete button for each task
            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.onclick = () => deleteTask(index);

            listItem.appendChild(deleteButton);

            taskList.appendChild(listItem);
        });
    }

    // Function to delete a task
    function deleteTask(index) {
        tasks.splice(index, 1);
        renderTasks();
    }

    // Initial render
    renderTasks();
</script>

</body>
</html>                                                                                                                        <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple To-Do List</title>
</head>
<body>

<h1>To-Do List</h1>

<form id="taskForm">
    <label for="taskInput">Add Task:</label>
    <input type="text" id="taskInput" required>
    <button type="button" onclick="addTask()">Add</button>
</form>

<ul id="taskList"></ul>

<script>
    // Array to store tasks
    let tasks = [];

    // Function to add a task
    function addTask() {
        const taskInput = document.getElementById('taskInput');

        // Get the task from the input field
        const taskText = taskInput.value;

        // Check if the task is not empty
        if (taskText.trim() !== '') {
            // Add the task to the array
            tasks.push(taskText);

            // Update the task list
            renderTasks();

            // Clear the input field
            taskInput.value = '';
        }
    }

    // Function to render tasks
    function renderTasks() {
        const taskList = document.getElementById('taskList');

        // Clear the existing list
        taskList.innerHTML = '';

        // Add tasks to the list
        tasks.forEach((task, index) => {
            const listItem = document.createElement('li');
            listItem.textContent = task;

            // Add a delete button for each task
            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.onclick = () => deleteTask(index);

            listItem.appendChild(deleteButton);

            taskList.appendChild(listItem);
        });
    }

    // Function to delete a task
    function deleteTask(index) {
        tasks.splice(index, 1);
        renderTasks();
    }

    // Initial render
    renderTasks();
</script>

</body>
</html>
